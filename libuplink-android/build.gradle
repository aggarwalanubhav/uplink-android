plugins {
    id 'com.android.library'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'maven-publish'
}

// To release libuplink-android to Bintray
// ./gradlew clean assembleRelease sourcesJar javadocJar :libuplink-android:bintrayUpload

def libraryVersion = '0.12.0'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 13
        versionName libraryVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/libuplink-android-release.aar")
            groupId 'io.storj'
            artifactId 'libuplink-android'
            version libraryVersion

            // Define this explicitly if using implementation or api configurations
            // def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = libraryVersion+'-sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.links("https://docs.oracle.com/javase/7/docs/api/");
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = libraryVersion+'-javadoc'

    from javadoc.destinationDir
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key  = System.getenv('BINTRAY_API_KEY')
    pkg {
        repo = 'maven'
        name = 'libuplink-android'
        userOrg = 'storj'
        vcsUrl = 'https://github.com/storj/android-libuplink.git'
        publish = false
        version {
            name = libraryVersion
            vcsTag = libraryVersion
        }
        filesSpec {
            from 'build/libs'
            into 'io/storj/libuplink-android/'+libraryVersion
        }
    }
    publications = ['Production']
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'io.storj:libuplink-android-gomobile:0.13.0'
}
